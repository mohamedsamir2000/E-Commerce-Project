{
	"info": {
		"_postman_id": "f3bda4bf-b968-44d1-b70d-1b304b12a795",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41820181",
		"_collection_link": "https://bold-eclipse-756791.postman.co/workspace/My-Workspace~4ab849d6-2534-4c88-8e88-4c69a892c278/collection/41820181-f3bda4bf-b968-44d1-b70d-1b304b12a795?action=share&source=collection_link&creator=41820181"
	},
	"item": [
		{
			"name": "https://practice.expandtesting.com/notes/api/health-check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Notes API is Running\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Notes API is Running\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/health-check",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"health-check"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" User account created successfully\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"User account created successfully\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "run2",
							"type": "text"
						},
						{
							"key": "email",
							"value": "run2@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "marwa123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/register",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Login successful\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Login successful\");\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "run1@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "marwa123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/login",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Profile successful\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Profile successful\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/profile",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Profile updated successful\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Profile updated successful\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "fayrouzmahmoud",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "01133333",
							"type": "text"
						},
						{
							"key": "company",
							"value": "qcjk",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/profile?token={{newtoken}}",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"profile"
					],
					"query": [
						{
							"key": "token",
							"value": "{{newtoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/forgot-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Password reset link successfully sent\", function () {\r",
							"    pm.expect(jsonData.success).to.eql(true);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "mom@yopmail.com",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/forgot-password",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"forgot-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/verify-reset-password-token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" The provided password reset token is invalid\", function () {\r",
							"    pm.expect(jsonData.success).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{newtoken}}\n",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/verify-reset-password-token",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"verify-reset-password-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/change-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "currentPassword",
							"value": "marwa123",
							"type": "text"
						},
						{
							"key": "newPassword",
							"value": "marwa1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/change-password",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Note successfully created\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Note successfully created\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "title",
							"value": "HomeW",
							"type": "text"
						},
						{
							"key": "description",
							"value": "HOMEWORK",
							"type": "text"
						},
						{
							"key": "category",
							"value": "Personal",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Notes successfully retrieved\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Notes successfully retrieved\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes/67f043028ae622028648310b",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Note successfully retrieved\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Note successfully retrieved\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes/{{ID}}",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes/67f043028ae622028648310b",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Note successfully Updated\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Note successfully Updated\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "title",
							"value": "Home work",
							"type": "text"
						},
						{
							"key": "description",
							"value": "english",
							"type": "text"
						},
						{
							"key": "completed",
							"value": "true",
							"type": "text"
						},
						{
							"key": "category",
							"value": "Home",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes/{{ID}}",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes/67f043028ae622028648310b",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Note successfully Updated\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Note successfully Updated\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "completed",
							"value": "true",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes/{{ID}}",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/notes/67f043028ae622028648310b",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Note successfully deleted\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Note successfully deleted\");\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/notes/{{ID}}",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"notes",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"User has been successfully logged out\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"User has been successfully logged out\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/logout",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://practice.expandtesting.com/notes/api/users/delete-account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\" Account successfully deleted\", function () {\r",
							"    pm.expect(jsonData.message).to.eql(\"Account successfully deleted\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "x-auth-token",
						"value": "{{newtoken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://practice.expandtesting.com/notes/api/users/delete-account",
					"protocol": "https",
					"host": [
						"practice",
						"expandtesting",
						"com"
					],
					"path": [
						"notes",
						"api",
						"users",
						"delete-account"
					]
				}
			},
			"response": []
		}
	]
}